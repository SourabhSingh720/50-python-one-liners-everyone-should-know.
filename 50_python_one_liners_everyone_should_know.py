# -*- coding: utf-8 -*-
"""50 python one-liners everyone should know.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DI9pKc-wy3m6JSlArZ_CNteNmfKPD8Ut
"""

#1. Anagram
from collections import Counter

s1 = 'below'
s2 = 'elbow'

#print('anagram') if Counter(s1) == Counter(s2) else print('not an anagram')
print('anagram') if sorted(s1) == sorted(s2) else print('not an anagram')
#Anagram is a word, phrase, or name formed by rearranging the letters of another, such as spar, formed from rasp.

#2. Binary to decimal
#format:int(number in inverted column,total numbers in the language)
decimal = int('1010', 2)
print(decimal)

#3. Converting string to lower case
"Hi my name is Sourabh".lower()         #string value to lower alphabet
"Hi my name is SoURaBh".casefold()

"""The casefold() method is similar to the lower() method but it is more aggressive. 
This means the casefold() method converts more characters into lower case compared to lower() . 
For example, the German letter ß is already lowercase so, the lower() method doesn't make the conversion.
"""

#4. Converting string to upper case
"hi my name is SOURabh".upper()        #string value to lower alphabet

#5. Converting string to byte
"convert string to bytes using encode method".encode()
#conversion between a string to bytes is more common these days due to the fact that for handling files or Machine Learning ( Pickle File )

#6. Copy files
import shutil; shutil.copyfile('/content/sample_data/source.txt', 'dest.txt')    #copy any file

#7. Quicksort
x=[1,25,3]
qsort = lambda l : l if len(l)<=1 else qsort([x for x in l[1:] if x < l[0]]) + [l[0]] + qsort([x for x in l[1:] if x >= l[0]])
qsort([6,5,6,44])

#8. Sum of n consecutive numbers
n=24
#sum(range(0, n+1))   #range with increment by 1 and then add all.
sum_n = n*(n+1)//2
sum_n

#9. Swap two values
a=1
b=2
a,b = b,a
a,b

#10. Fibonacci series
fib=lambda x: x if x<=1 else fib(x-1) + fib(x-2)
fib(6)

#11. Combine nested lists to a single list
main_list='matplotlib'
[item for sublist in main_list for item in sublist]

#12. Run an HTTP server
#(in complier only)
python3 -m http.server 8000

#13. Reverse a list
numbers=[0,1,2,3,4,5,6,7,8,9]
numbers[::-1]                # start list from last number location and moves the list backwards, to reverse the list.

#14. Factorial of a number
#factorial, in mathematics, the product of all positive integers less than or equal to a given positive integer
import math; fact_5 = math.factorial(5)
fact_5    #1*2*3*4*5=120

#15. List comprehension using “for” and “if”
[number for number in [1, 2, 3, 4] if number % 2 == 0]  #Checking only even number

#16. Longest string from a list
words = ['This', 'is', 'a', 'listed', 'of', 'words']
max(words, key=len)

#17. List comprehension
list_c = [num for num in range(0,20)]  #Making list of given range
list_c

#18. Set comprehension
num_set = { num for num in range(0,20)}  #Making set of given range
num_set

""" The main difference between List and Set is that Set is unordered and contains different elements, whereas the list is ordered and can contain the same elements in it."""

#19. Dictionary comprehension
dict_numbers = {x:x*x for x in range(1,5) }   #Making dictionary of given range by applying condition for keys and words
dict_numbers

#20. if-else
print("even") if 4%2==0 else print("odd")  #Checking even-odd using if-else.

#21. Infinite while loop
while 1:0  ##can't achieve 1 till 0 then while loop never ends.

#22. Check the data type
isinstance(2, int)
isinstance("allwin", str)
isinstance([1,5,7], type(list))

#23. While loop
a=5
while a > 2: a = a - 1; print(a)  #while loop run till a=2

#24. Write to a file using the print statement
print("Hello, World!", file=open('file.txt', 'w'))  #open of open file and w means write to change the file.

#25. Count the frequency of a character in a string
print("umbrella".count('l'))

#Merge two lists
list1=[1,2,3]
list2=[4,5,6]
list1.extend(list2)   
list1

#Merge two dictionaries
dict1={1: 1, 2: 4, 3: 9, 4: 16}
dict2={1: 1, 2: 4, 3: 9, 4: 15}
dict1.update(dict2)
dict1

#28. Merge two sets
set1={1,2,3}
set2={3,4,5}
set1.update(set2)
set1

#29. Timestamp
import time; print(time.time())

#30. Most frequent element
test_list = [9, 4, 5, 5, 4, 5, 9, 5, 4]
most_frequent_element = max(set(test_list), key=test_list.count)  #using max to find the maximum using number in the set
most_frequent_element
#or
numbers = [9, 4, 5, 4, 4, 5, 9, 5, 4]

from collections import Counter
print(Counter(numbers).most_common()[0][0]) #form the numbers with their with descending value ,then print the top number in the list.

#31. Nested list comprehension
numbers = [[num] for num in range(10)]   #form numbers in square brackets and then add to list.
numbers

#32. Octal to decimal
print(int('30', 8))

#33. Convert key-value pair to dictionary
dict(name='sourabh', age=20)   #To form a dictionary

#34. Get quotient and remainder
quotient, remainder = divmod(5,4)   
quotient, remainder

#35. Remove duplicate elements from a list
list(set([4, 4, 5, 5, 6]))

#36. Sort list in ascending order
sorted([5, 2, 9, 1])      #using sorted funtion for ascending
#or
li = [5, 2, 9, 1]
li.sort()
li

#37. Sort list in descending order
sorted([5, 2, 9, 1], reverse=True) #using sorted funtion for descending

#38. Get a string of lower-case alphabets
import string; print(string.ascii_lowercase)

#39. Get a string of upper case alphabets
import string; print(string.ascii_uppercase)

#40. Get a string of digits from 0 to 9
import string; print(string.digits)

#41. Hexadecimal to decimal
#format:int(number in inverted column,total numbers in the language)
print(int('ff', 16))

#42. Human readable DateTime
import time; print(time.ctime())

#43. Convert a list of strings to integers
list(map(int, ['1', '2', '3']))

#44. Sort dictionary with keys
x = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
{k: v for k, v in sorted(x.items(), key=lambda item: item[1])}

#46. Rotate a list
li = [1,2,3,4,5]
n=5
# right to left
li[n:] + li[:n] # n is the no of rotations
li[2:] + li[:2]
# left to right
li[-n:] + li[:-n]
li[-1:] + li[:-1] 
li

#47. Remove numbers from a string
''.join(list(filter(lambda x: x.isalpha(), 'abc123def4fg56vcg2')))

#48. Transpose matrix
old_list = [[1, 2, 3], [3, 4, 6], [5, 6, 7]]
list(list(x) for x in zip(old_list)) #not working
#else use
import numpy
print(numpy.transpose(old_list))

_#49. Filter even numbers from a list
list(filter(lambda x: x%2 == 0, [1, 2, 3, 4, 5, 6] ))

#50. Unpacking values
a, b, *c = [1, 2, 3, 4, 5]
print(a) 
print(b) 
print(c)

